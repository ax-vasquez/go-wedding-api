name: Test and coverage

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      POSTGRES_DB: ${{ secrets.PGSQL_DBNAME }}
      POSTGRES_USER: ${{ secrets.PGSQL_USER }}
      POSTGRES_PASSWORD: ${{ secrets.PGSQL_PASSWORD }}
      PGSQL_PORT: ${{ secrets.PGSQL_PORT }}
    services:
        db:
          # Keep parity with whatever version we're using in docker-compose.yml
          image: postgres:16.3
          env:
            POSTGRES_DB: ${{ secrets.PGSQL_DBNAME }}
            POSTGRES_USER: ${{ secrets.PGSQL_USER }}
            POSTGRES_PASSWORD: ${{ secrets.PGSQL_PASSWORD }}
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - ${{ secrets.PGSQL_PORT }}:5432
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.22'
      - name: Run coverage
        run: go test ./... -v
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
